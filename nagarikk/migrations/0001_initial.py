# Generated by Django 5.0 on 2025-03-01 21:08

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('otp_created_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=50)),
                ('middlename', models.CharField(blank=True, max_length=50, null=True)),
                ('lastname', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('dob', models.DateField()),
                ('borndistrict', models.CharField(max_length=100)),
                ('bornward', models.IntegerField(blank=True, null=True)),
                ('bornplace', models.CharField(max_length=100)),
                ('currentdistrict', models.CharField(max_length=100)),
                ('currentward', models.IntegerField(blank=True, null=True)),
                ('currentplace', models.CharField(max_length=100)),
                ('citizennumber', models.CharField(max_length=50, unique=True)),
                ('issuedate', models.DateField()),
                ('issueplace', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('frontimage', models.ImageField(blank=True, null=True, upload_to='citizenship_front/')),
                ('backimage', models.ImageField(blank=True, null=True, upload_to='citizenship_back/')),
                ('father_firstname', models.CharField(max_length=50)),
                ('father_middlename', models.CharField(blank=True, max_length=50, null=True)),
                ('father_lastname', models.CharField(max_length=50)),
                ('father_borndistrict', models.CharField(max_length=100)),
                ('father_bornward', models.IntegerField(blank=True, null=True)),
                ('father_bornplace', models.CharField(max_length=100)),
                ('mother_firstname', models.CharField(max_length=50)),
                ('mother_middlename', models.CharField(blank=True, max_length=50, null=True)),
                ('mother_lastname', models.CharField(max_length=50)),
                ('mother_borndistrict', models.CharField(max_length=100)),
                ('mother_bornward', models.IntegerField(blank=True, null=True)),
                ('mother_bornplace', models.CharField(max_length=100)),
                ('partner_firstname', models.CharField(blank=True, max_length=50, null=True)),
                ('partner_middlename', models.CharField(blank=True, max_length=50, null=True)),
                ('partner_lastname', models.CharField(blank=True, max_length=50, null=True)),
                ('partner_borndistrict', models.CharField(blank=True, max_length=100, null=True)),
                ('partner_bornward', models.IntegerField(blank=True, null=True)),
                ('partner_bornplace', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
